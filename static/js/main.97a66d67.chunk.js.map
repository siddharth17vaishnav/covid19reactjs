{"version":3,"sources":["Components/Chart/Chart.module.css","Components/Cards/Cards.module.css","Components/Cards/Cards.js","api/index.js","Components/Chart/Chart.js","Components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","conatiner","Grid","container","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailydata","map","dailydata","date","reportDate","Chart","useState","setDailyData","useEffect","fetchMyAPI","initialDailyData","console","log","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","countries","setCountries","then","res","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","name","App","state","setState","this","src","alt","image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97a66d67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1LxqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__12CJ-\",\"card\":\"Cards_card__7LkMl\",\"infected\":\"Cards_infected__12wG7\",\"recovered\":\"Cards_recovered__2cfXY\",\"deaths\":\"Cards_deaths__2SvJi\"};","import React from 'react';\r\nimport {Card,CardContent , Typography,Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n   if(!confirmed){\r\n       return \"loading..\"\r\n   }\r\n    return (\r\n        <div className={styles.conatiner}>\r\n            <Grid container spacing={3} justifyContent=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>No of Infected case</Typography>\r\n                        </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                             <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                             </Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>No of Recovered case</Typography>\r\n                        </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>No of Death case</Typography>\r\n                        </CardContent>\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n  let changeableUrl= url;\r\n  if(country){\r\n    changeableUrl=`${url}/countries/${country}`\r\n  }\r\n   try{\r\n    const { data: { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\r\n    \r\n    const modifiedData = {\r\n        confirmed: confirmed,\r\n        recovered: recovered,\r\n        deaths: deaths,\r\n        lastUpdate:lastUpdate\r\n    }\r\n    return modifiedData;\r\n\r\n   }catch(e){\r\n\r\n   }\r\n}\r\n\r\nexport const fetchDailydata = async()=>{\r\n    try{\r\n            const {data} = await axios.get(`${url}/daily`);\r\n          const modifiedData = data.map((dailydata)=>({\r\n              confirmed: dailydata.confirmed,\r\n              deaths: dailydata.deaths,\r\n              date: dailydata.reportDate\r\n          }));\r\n\r\n          return modifiedData;\r\n    }catch(e){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(\"https://covid19.mathdro.id/api/countries\");\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n      return error;\r\n    }\r\n  };","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailydata } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailydata();\r\n        console.log(initialDailyData);\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n \r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {barChart} \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport axios from 'axios';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [countries, setCountries] = useState([]);\r\n   useEffect(() => {\r\n       axios.get(\"https://covid19.mathdro.id/api/countries\").then((res)=>{\r\n           setCountries(res.data.countries);\r\n       })\r\n   },[setCountries])\r\n    console.log(countries)\r\n    return (\r\n       <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n            <option value=\"india\">Global</option>\r\n         {countries.map((country,i) =>\r\n        <option key={i} value={country.name}>{country.name}</option> )}\r\n          \r\n        </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React from 'react';\nimport Cards from './Components/Cards/Cards'\nimport Chart from './Components/Chart/Chart'\nimport CountryPicker from './Components/CountryPicker/CountryPicker';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img src=\"https://covid19statswebsite.netlify.app/static/media/image.d7265326.png\" alt=\"img\" className={styles.image}/>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3iP0e\",\"image\":\"App_image__3Oa3w\"};"],"sourceRoot":""}